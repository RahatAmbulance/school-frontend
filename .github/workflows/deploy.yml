name: Build and Deploy Frontend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: scholiq-frontend
  CONTAINER_PORT: 80
  HOST_PORT: 3000
  NODE_VERSION: '16'

jobs:
  build-and-deploy:
    runs-on: [self-hosted, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Clean npm cache and node_modules
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json

      - name: Install dependencies with force resolution
        run: |
          npm install --legacy-peer-deps --force
          npm ls react-scripts || npm install react-scripts@5.0.1 --save-dev

      - name: Verify react-scripts installation
        run: |
          npx react-scripts --version
          which react-scripts || echo "react-scripts not in PATH"
          ls -la node_modules/.bin/ | grep react-scripts || echo "react-scripts not found in .bin"

      - name: Build application
        run: |
          NODE_OPTIONS="--max_old_space_size=4096" npm run build
        env:
          CI: false
          GENERATE_SOURCEMAP: false

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Stop and Remove Existing Container
        run: |
          docker stop scholiq-frontend || true
          docker rm scholiq-frontend || true

      - name: Deploy Frontend Container
        run: |
          docker run -d --name scholiq-frontend \
            --restart unless-stopped \
            -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Verify Deployment
        run: |
          sleep 15
          if docker ps | grep -q scholiq-frontend; then
            echo "✅ Frontend container is running"
            docker ps | grep scholiq-frontend
          else
            echo "❌ Frontend container failed to start"
            docker logs scholiq-frontend --tail 20
            exit 1
          fi

      - name: Health Check
        run: |
          for i in {1..10}; do
            if curl -sf http://localhost:${{ env.HOST_PORT }}/ > /dev/null; then
              echo "✅ Frontend is accessible at http://89.116.21.135:${{ env.HOST_PORT }}"
              break
            fi
            if [ $i -eq 10 ]; then
              echo "❌ Frontend health check failed"
              docker logs scholiq-frontend --tail 50
            fi
            sleep 10
          done

      - name: Cleanup
        run: docker image prune -f
