name: Build and Deploy Frontend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: scholiq-frontend
  CONTAINER_PORT: 80
  HOST_PORT: 3000
  NODE_VERSION: '16'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          npm audit fix --force || true

      - name: Build application
        run: |
          NODE_OPTIONS="--max_old_space_size=4096" npm run build
        env:
          CI: false

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Save Docker Image
        run: |
          docker save -o scholiq-frontend.tar ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          chmod 644 scholiq-frontend.tar

      - name: Clean up existing deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üîç Stopping existing frontend services..."
            
            # Stop and remove existing container
            docker stop scholiq-frontend || true
            docker rm scholiq-frontend || true
            
            # Remove old images to save space
            docker images | grep scholiq-frontend | awk '{print $3}' | xargs docker rmi || true
            
            # Clean up transfer file
            rm -f /tmp/scholiq-frontend.tar
            
            echo "‚úÖ Cleanup completed"

      - name: Transfer Docker Image to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "scholiq-frontend.tar"
          target: "/tmp"
          overwrite: true

      - name: Deploy Frontend Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üì¶ Loading Docker image..."
            docker load < /tmp/scholiq-frontend.tar
            
            echo "üöÄ Starting frontend container..."
            docker run -d --name scholiq-frontend \
              --restart unless-stopped \
              -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
              ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
            
            echo "‚è≥ Waiting for container to start..."
            sleep 10
            
            # Health check
            for i in {1..12}; do
              echo "üîç Health check attempt $i/12..."
              if curl -sf http://localhost:${{ env.HOST_PORT }}/ > /dev/null; then
                echo "‚úÖ Frontend is running successfully!"
                echo "üåê Application accessible at: http://89.116.21.135:${{ env.HOST_PORT }}"
                break
              fi
              if [ $i -eq 12 ]; then
                echo "‚ùå Frontend health check failed"
                echo "Container logs:"
                docker logs scholiq-frontend --tail 50
                exit 1
              fi
              echo "‚è≥ Waiting 5 seconds before next check..."
              sleep 5
            done
            
            echo "üßπ Cleaning up transfer files..."
            rm -f /tmp/scholiq-frontend.tar
            
            echo "üìä Container status:"
            docker ps | grep scholiq-frontend
